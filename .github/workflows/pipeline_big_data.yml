name: 'Create data test on big data'

on:
    workflow_dispatch:
    pull_request:
      types: [labeled]
    # this can be removed once the dask fix is merged
    push:
      branches:
        - dask_fix


# Skip if PR doesn't have the right label
permissions:
  contents: read
  pull-requests: read

jobs:
    tests:
      if: |
        github.event_name == 'workflow_dispatch' ||
        github.event_name == 'push' ||
        (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Run big test'))
      runs-on: "ubuntu-latest"
      timeout-minutes: 100 
      steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup dependencies.
              run: |
                python -m venv .venv
                source .venv/bin/activate
                pip install -r requirements.txt
            
            - name: Run create_data with background cleanup
              run: |
                # Activate virtual environment
                source .venv/bin/activate
                  
                # Start the main.create_data script in the background
                python -m corebehrt.main.create_data --config_path tests/pipeline_configs/create_data_big.yaml &
        
                # Wait for 3 minutes to ensure data is loaded
                sleep 180
        
                # Delete the original simulated data to free space
                echo "Deleting simulated data to save space..."
                rm -rf ./tmp/example_data_large
        
                # Wait for the main.create_data script to complete
                wait

            # - name: main.pretrain
            #   run: |
            #     source .venv/bin/activate
            #     python -m corebehrt.main.pretrain
            
            # - name: main.create_outcomes
            #   run: |
            #     source .venv/bin/activate
            #     python -m corebehrt.main.create_outcomes
            
            # - name: main.finetune_cv
            #   run: |
            #     source .venv/bin/activate
            #     python -m corebehrt.main.finetune_cv

            - name: Cleanup tmp directory
              if: always()  # Run even if previous steps fail
              run: |
                rm -rf tmp/