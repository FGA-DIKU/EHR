name: 'Pipeline test'

on:
    workflow_dispatch:
    pull_request:

permissions:
  contents: read
  pull-requests: read
  actions: write

jobs:
    data_preparation:
        runs-on: "ubuntu-latest"
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup + dependencies
              uses: ./.github/actions/setup
            - name: Create data and outcomes
              run: |
                python -m corebehrt.main.create_data
                python -m corebehrt.main.create_outcomes
            - name: Upload outputs
              uses: actions/upload-artifact@v4
              with:
                name: base_data_outputs
                path: "./outputs"

    training_preparation:
        needs: data_preparation
        runs-on: "ubuntu-latest"
        strategy:
          matrix:
            config: ['prepare_pretrain', 'prepare_finetune', 'prepare_held_out']
            include:
              - config: prepare_pretrain
                needs_cohort: false
                output_name: prepare_pt_outputs
              - config: prepare_finetune
                needs_cohort: true
                cohort_config: ''  # default config
                output_name: prepare_finetune_outputs
              - config: prepare_held_out
                needs_cohort: true
                cohort_config: select_cohort_held_out
                output_name: prepare_held_out_outputs
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup + dependencies
              uses: ./.github/actions/setup
            - name: Download outputs
              uses: actions/download-artifact@v4
              with:
                name: base_data_outputs
                path: "./outputs"
            - name: Run cohort selection
              if: ${{ matrix.needs_cohort }}
              run: |
                python -m corebehrt.main.select_cohort ${{ matrix.cohort_config && format('--config_path ./corebehrt/configs/{0}.yaml', matrix.cohort_config) }}
            - name: Prepare training data
              run: |
                python -m corebehrt.main.prepare_training_data --config_path ./corebehrt/configs/${{ matrix.config }}.yaml
            - name: Upload outputs
              uses: actions/upload-artifact@v4
              with:
                name: ${{ matrix.output_name }}
                path: "./outputs"

    pretraining:
        needs: training_preparation
        runs-on: "ubuntu-latest"
        strategy:
          matrix:
            config: ['pretrain', 'pretrain_causal']
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup + dependencies
              uses: ./.github/actions/setup
            - name: Download outputs
              uses: actions/download-artifact@v4
              with:
                name: prepare_pt_outputs
                path: "./outputs"
            - name: Run pretraining
              run: |
                python -m corebehrt.main.pretrain ${{ matrix.config != 'pretrain' && format('--config_path ./corebehrt/configs/{0}.yaml', matrix.config) }}
            - name: Upload outputs
              if: matrix.config == 'pretrain'  # Only upload the main pretrain outputs
              uses: actions/upload-artifact@v4
              with:
                name: pretrain_outputs
                path: "./outputs"

    finetuning:
        needs: [training_preparation, pretraining]
        runs-on: "ubuntu-latest"
        strategy:
          matrix:
            type: ['simple', 'oot']
            include:
              - type: simple
                output_name: finetune_cv_outputs
              - type: oot
                cohort_config: select_cohort_absolute
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup + dependencies
              uses: ./.github/actions/setup
            - name: Download outputs
              uses: actions/download-artifact@v4
              with:
                name: prepare_finetune_outputs
                path: "./outputs"
            - name: Download pretrain outputs
              uses: actions/download-artifact@v4
              with:
                name: pretrain_outputs
                path: "./outputs"
            - name: Run cohort selection
              if: matrix.type == 'oot'
              run: |
                python -m corebehrt.main.select_cohort --config_path ./corebehrt/configs/${{ matrix.cohort_config }}.yaml
            - name: Run finetuning
              run: |
                python -m corebehrt.main.finetune_cv ${{ matrix.type == 'oot' && '--config_path ./corebehrt/configs/finetune_oot.yaml' }}
            - name: Upload outputs
              if: matrix.type == 'simple'
              uses: actions/upload-artifact@v4
              with:
                name: ${{ matrix.output_name }}
                path: "./outputs"

    evaluate:
        needs: [finetuning, training_preparation]
        runs-on: "ubuntu-latest"
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup + dependencies
              uses: ./.github/actions/setup
            - name: Download finetune outputs
              uses: actions/download-artifact@v4
              with:
                name: finetune_cv_outputs
                path: "./outputs"
            - name: Download held-out outputs
              uses: actions/download-artifact@v4
              with:
                name: prepare_held_out_outputs
                path: "./outputs"
            - name: Evaluate
              run: |
                python -m corebehrt.main.evaluate_finetune

          
                