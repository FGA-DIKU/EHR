from typing import Iterator, List, Tuple

from sklearn.model_selection import KFold

from corebehrt.data.dataset import PatientDataset


def get_n_splits_cv(
    data: PatientDataset, n_splits: int, indices: list = None
) -> Iterator[Tuple[List[int], List[int]]]:
    """
    Generate indices for n_splits cross-validation.

    Parameters:
    data (PatientDataset): PatientDataset object containing 'pids'.
    n_splits (int): Number of folds for cross-validation.
    indices (List[int], optional): List of indices to be used. If None, all indices from data are used.

    Yields:
    Iterator[Tuple[List[int], List[int]]]: Iterator over tuples of train and validation indices for each fold.
    """
    kf = KFold(n_splits=n_splits, shuffle=True, random_state=42)

    if indices is None:
        indices = list(range(len(data.get_pids())))
    # Iterate over each fold generated by KFold
    for train_idx, val_idx in kf.split(indices):
        # Map the relative indices to actual indices in the data
        train_indices = [indices[i] for i in train_idx]
        val_indices = [indices[i] for i in val_idx]

        yield train_indices, val_indices
