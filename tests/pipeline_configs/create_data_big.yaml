logging:
  level: INFO
  path: ./tmp/outputs/logs

paths:
  data: ./tmp/example_data_large
  tokenized: ./tmp/outputs/tokenized
  features: ./tmp/outputs/features
  
loader:
  concept_types: [
    diagnose,
    medication,
    labtest
  ]
  include_values: [labtest]

features:
  #ages: true
  origin_point:
    year: 2020
    month: 1
    day: 26
  #segment: true
  background_vars: ['GENDER']

# Arguments for adding values to the data
values:
  value_type: binned # How you want the values. Either binned or quantile are supported.
  value_type_kwargs: # Arguments for the value type. Ex. multiplication_factor for binned.
    multiplication_factor: 100
  normalize: # Dict with the function and kwargs for normalizing the values.
    func: corebehrt.classes.normalizer.ValuesNormalizer.min_max_normalize_results # Example function
    kwargs: # Example kwargs
      min_count: 3

tokenizer:
  sep_tokens: true
  cls_token: true
  #cutoffs:
   # D: 3 # diagnosis
   # M: 4 # medication

excluder:
  min_len: 2
  min_age: -1
  max_age: 120

split_ratios:
  pretrain: 0.72 # 80% of 90%
  finetune: 0.18 # 20% of 90%
  test: 0.1
